<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picStudent.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAP0AAADHCAMAAADlCqUFAAAABGdBTUEAALGPC/xhBQAAAEtQTFRFsrGw
        ////7u7u7e3t8fHx/Pz89PT0+Pj4rKuqr66tt7a1s7Kxubi36urq5+fnuLe2x8bGwL++0tLR09PS2dnZ
        39/f4uLiy8rJ09LSW5UM8QAADPtJREFUeF7tnWG7qqwShss0XzRdWpbr///Sw8xATYKGCizdp+fDvh7b
        rfQGHEZUOBxRp0TqRB6szafos0l/NnxOHnagfD7pzy+fmD5Dnzp7AkvG/Jdeb3zppfDzL/3A/8P0oIp5
        TW94Rezgz+g1/cvnk14Tv3xmeE1p9wSgKZmvcIP7A/7rxE3enTtEGUxzk7dwo1cA3B+wBWjKEe/S5s32
        r4ntfm77p/bMvSa2++k2H42ee9jzl17qS//39BgDeNRT/p+Nejzy8x5PfcS9WQbT3GYZWLll6b9YuR/n
        di8Dk9tSBuT/JNs51ffb77VvpNq2bfrbvTpnxxy/r+kHfkabd2//8XO9vP5tfw6HgyCRk//+NL9dnaTP
        dgB//E/RJ+eka4sDsFoky6Bo+zsd9T9GL+2jb8fInxKivcHxRaYHBczz86r7jE4Sh/aRmZGOe01p92ak
        U34sz1cfcW9yk3fnfvmkdmYHCVF0WGhm5J/mJm/hRm+BjJHtnK4Xd3SSuHTyp8w2797+p9t8PPpuNjtI
        XO4W4r3R1+0SdpBoa/idHdNnXbkUXuKXfSV/KCQ9xoBQeX66uOJJon3ojM9b1IuW56+peJIo4OwHuZeB
        yW0pA/IBs520VwirJHrM/2e0eff2HzDXy5q1FU+SwQ/2sC/688pT/iVxechd7Io+XdTJ2yVP/jQsPchj
        nn/2CC9V3J/0IE1p92ak417BhMzzHz9e4SX+yYWb/Adu7oNkO5XfmpcSF2qq7u1/us0HpM+8BbyXxAXT
        3u3TZ71/eOj4hlnvNul/Q8BL/F7uwDc9xgCnaE/+Y9Sr1dH61y3xEfUC5vnnpC7UsfpXmX7gJm9yW8qA
        vO9s5xQg4mmJNnNp8+7t33uudwsHL/G7bdNX4do9qIS4v136IJ3dS6JlZB7pQevz/CosPLR9OApNCTK9
        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
        QmCC
</value>
  </data>
</root>